import torch

# 定义你的函数
def find_sublist_first_occurrence(list1, list2, start_index=0):
    # 如果列表2的长度大于列表1，肯定找不到
    if len(list2) > len(list1):
        return -1
    # 从指定位置start_index开始查找
    for i in range(start_index, len(list1) - len(list2) + 1):
        if list1[i:i + len(list2)] == list2:
            return i  # 返回在原列表中的索引位置
    return -1  # 如果没有找到，返回-1

# 输入的 tensor 数据（简化后的）
token_list = torch.tensor([151644, 8948, 198, 2610, 525, 264, 10950, 17847, 13, 151645, 198, 151644, 872, 198, 785, 3405, 25, 15920, 3693, 4531, 7538, 11, 16851, 11, 4171, 18189, 1062, 82108, 350, 56984, 22518, 4531, 14029, 11, 45196, 58154, 1515, 476, 15115, 12839, 268, 5267, 8304, 220, 16, 510, 785, 3491, 6358, 25, 1096, 374, 264, 3070, 46103, 65166, 334, 3491, 1576, 432, 7460, 24588, 279, 1062, 35827, 315, 350, 56984, 22518, 4531, 14029, 1948, 1378, 7775, 11, 45196, 58154, 1515, 323, 15115, 12839, 268, 13, 576, 3383, 646, 387, 19673, 553, 48224, 1995, 911, 279, 1062, 35827, 315, 350, 56984, 22518, 323, 26297, 432, 448, 279, 1378, 7775, 9733, 624, 51, 198, 785, 56370, 3239, 25, 10479, 1062, 82108, 350, 56984, 22518, 4531, 14029, 5267, 785, 56370, 9293, 25, 79783, 6241, 33526, 1765, 198, 26516, 1711, 19, 13, 21, 3526, 19952, 15245, 568, 1644, 263, 1055, 26684, 9226, 3220, 369, 279, 2390, 553, 11236, 400, 16, 15, 15, 13248, 304, 279, 4531, 311, 2997, 323, 4780, 11, 323, 572, 2952, 311, 2291, 1105, 678, 1182, 448, 264, 400, 20, 15, 11372, 817, 59720, 979, 279, 4531, 572, 6088, 311, 5166, 17132, 13, 350, 56984, 22518, 374, 264, 4531, 5670, 323, 7982, 2813, 18047, 553, 45196, 58154, 1515, 323, 7937, 52639, 304, 220, 16, 24, 22, 19, 13, 576, 2813, 18644, 3347, 94752, 9489, 12351, 11, 1657, 315, 892, 614, 7881, 4511, 1795, 819, 13, 58154, 1515, 702, 1012, 69279, 911, 862, 990, 297, 151645, 198, 151644, 77091, 198, 8304, 220, 17, 510, 785, 3491, 6358, 25, 576, 56370, 304, 14822, 220, 16, 5707, 2697, 9293, 8826, 279, 1062, 35827, 315, 350, 56984, 22518, 4531, 14029, 13, 10548, 311, 279, 9293, 11, 350, 56984, 22518, 572, 18047, 553, 45196, 58154, 1515, 323, 7937, 52639, 304, 220, 16, 24, 22, 19, 13, 1096, 1995, 5961, 11253, 279, 3405, 11, 438, 432, 35511, 45196, 58154, 1515, 438, 825, 315, 279, 1062, 26704, 388, 13, 15115, 12839, 268, 374, 537, 9733, 304, 279, 9293, 11, 48996, 429, 566, 374, 537, 279, 1062, 35827, 624, 785, 1590, 4226, 25, 45196, 58154, 1515, 13, 151645], device='cuda:0')

# 查找的子列表
sublist = [8304, 220]

# 将 tensor 转换为 Python 列表
# token_list_python = token_list.cpu().numpy().tolist()  # 转换为CPU上的列表
token_list_python = token_list

# 调用函数查找子列表首次出现的位置
index = find_sublist_first_occurrence(token_list_python, sublist)

# 输出结果
print(f"子列表 {sublist} 首次出现的索引位置是: {index}")
